<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <InvariantGlobalization>true</InvariantGlobalization>
        <WarningsAsErrors>Nullable</WarningsAsErrors>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjectionFixed" Version="5.1.2" />
        <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.7" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.7">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="8.0.7" />
        <PackageReference Include="Microsoft.Extensions.Http.Resilience" Version="8.7.0" />
        <PackageReference Include="NSwag.AspNetCore" Version="14.0.8" />
        <PackageReference Include="NSwag.MSBuild" Version="14.0.8">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Serilog" Version="4.0.0" />
        <PackageReference Include="Serilog.AspNetCore" Version="8.0.1" />
        <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
        <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    </ItemGroup>

    <ItemGroup>
      <Content Update="appsettings.Development.json">
        <DependentUpon>appsettings.json</DependentUpon>
      </Content>
      <Content Remove="Logs\**" />
      <Content Remove="specification.json" />
      <Content Remove="ClientGeneration\obj\**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\RepoRanger.Application.Abstractions\RepoRanger.Application.Abstractions.csproj" />
      <ProjectReference Include="..\RepoRanger.Application.Commands\RepoRanger.Application.Commands.csproj" />
      <ProjectReference Include="..\RepoRanger.Application.Queries\RepoRanger.Application.Queries.csproj" />
      <ProjectReference Include="..\RepoRanger.BackgroundJobs\RepoRanger.BackgroundJobs.csproj" />
      <ProjectReference Include="..\RepoRanger.Infrastructure\RepoRanger.Infrastructure.csproj" />
      <ProjectReference Include="..\RepoRanger.Persistence\RepoRanger.Persistence.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="Logs\**" />
      <Compile Remove="ClientGeneration\obj\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="Logs\**" />
      <EmbeddedResource Remove="ClientGeneration\obj\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="Logs\**" />
      <None Remove="ClientGeneration\obj\**" />
      <None Update="client-angular-app.nswag">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </None>
      <None Update="client-csharp-open-source-vulnerabilities.nswag">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </None>
      <None Remove="client-angular-app.nswag" />
      <None Remove="client-csharp-open-source-vulnerabilities.nswag" />
    </ItemGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="RepoRanger.Api.IntegrationTests" />
    </ItemGroup>

    <!-- Build Actions-->
    <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
        <!-- Generate Google OSV Api C# Client -->
        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NSwagExe_Net80) run client-csharp-open-source-vulnerabilities.nswag /variables:Configuration=$(Configuration)" />
    </Target>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <!-- Generate Angular TypeScript Client -->
        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NSwagExe_Net80) run client-angular-app.nswag /variables:Configuration=$(Configuration)" />
    </Target>

</Project>
