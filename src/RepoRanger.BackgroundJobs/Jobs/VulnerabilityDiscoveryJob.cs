using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using Quartz;
using RepoRanger.BackgroundJobs.Abstractions;
using RepoRanger.BackgroundJobs.Abstractions.Options;

namespace RepoRanger.BackgroundJobs.Jobs;

[DisallowConcurrentExecution]
internal sealed class VulnerabilityDiscoveryJob : BaseJob<VulnerabilityDiscoveryJob>
{
    internal static readonly JobKey JobKey = new(nameof(VulnerabilityDiscoveryJob));
    
    private readonly ILogger<BaseJob<VulnerabilityDiscoveryJob>> _logger;

    public VulnerabilityDiscoveryJob(ILogger<VulnerabilityDiscoveryJob> logger,
        IOptions<BackgroundJobOptions> options) : base(logger, options)
    {
        _logger = logger;
    }

    protected override Task ExecuteJobLogicAsync(IJobExecutionContext context)
    {
        throw new NotImplementedException();
    }
}